spring.application.name=canteen-management-system
# File: src/main/resources/application.properties

# Server Configuration
# Prefer port from environment (Render provides $PORT). Fall back to 8080 for local dev.
server.port=${PORT:8080}

# Application Name
spring.application.name=canteen-management-system

# MongoDB Database Connection
# IMPORTANT: Replace <user>, <password>, and <your-cluster> with your actual credentials!
#spring.data.mongodb.uri=mongodb+srv://<user>:<password>@<your-cluster>.mongodb.net/canteenDB?retryWrites=true&w=majority
# If SPRING_DATA_MONGODB_URI is set in the environment it will be used.
# Otherwise default to a local MongoDB instance for development convenience.
# IMPORTANT: update this for production environments.
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/canteenDB}

# Development only: set a fixed user so you can login from browser without generated password
# Use {noop} to indicate the password is stored in plain text (not encoded). Do NOT use in production.

# NOTE: Credentials are created in MongoDB by DataLoader for development convenience.
# Use environment variable SPRING_DATA_MONGODB_URI to provide the Atlas connection string.

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
